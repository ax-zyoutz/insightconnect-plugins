# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Retrieve Automox managed devices"


class Input:
    GROUP_ID = "group_id"
    ORG_ID = "org_id"
    

class Output:
    DEVICES = "devices"
    

class ListDevicesInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "group_id": {
      "type": "integer",
      "title": "Group ID",
      "description": "Identifier of Server Group",
      "order": 2
    },
    "org_id": {
      "type": "integer",
      "title": "Organization ID",
      "description": "Identifier of organization to restrict results",
      "order": 1
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class ListDevicesOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "devices": {
      "type": "array",
      "title": "Devices",
      "description": "List of Automox managed devices",
      "items": {
        "$ref": "#/definitions/device"
      },
      "order": 1
    }
  },
  "definitions": {
    "device": {
      "type": "object",
      "title": "device",
      "properties": {
        "id": {
          "type": "integer",
          "title": "Device ID",
          "description": "The device ID",
          "order": 1
        },
        "name": {
          "type": "string",
          "title": "Device Name",
          "description": "The device name",
          "order": 5
        },
        "organization_id": {
          "type": "integer",
          "title": "Organization ID",
          "description": "The organization identifier of the device",
          "order": 3
        },
        "server_group_id": {
          "type": "integer",
          "title": "Server Group ID",
          "description": "The server group identifier of the device",
          "order": 2
        },
        "uuid": {
          "type": "string",
          "title": "Device UUID",
          "description": "The device unique identifier",
          "order": 4
        }
      },
      "required": [
        "id",
        "name",
        "organization_id",
        "server_group_id",
        "uuid"
      ]
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
