# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Retrieve users of the Automox organization"


class Input:
    ORG_ID = "org_id"
    

class Output:
    USERS = "users"
    

class ListOrganizationUsersInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "org_id": {
      "type": "integer",
      "title": "Organization ID",
      "description": "Identifier of Organization",
      "order": 1
    }
  },
  "required": [
    "org_id"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class ListOrganizationUsersOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "users": {
      "type": "array",
      "title": "Users",
      "description": "List of Automox users",
      "items": {
        "$ref": "#/definitions/users"
      },
      "order": 1
    }
  },
  "definitions": {
    "users": {
      "type": "object",
      "title": "users",
      "properties": {
        "email": {
          "type": "string",
          "title": "Email",
          "description": "The email of the user",
          "order": 4
        },
        "features": {
          "type": "object",
          "title": "Features",
          "description": "The features enabled for the user",
          "order": 5
        },
        "firstname": {
          "type": "string",
          "title": "First Name",
          "description": "The first name of the user",
          "order": 2
        },
        "id": {
          "type": "integer",
          "title": "User ID",
          "description": "The user identifier",
          "order": 1
        },
        "lastname": {
          "type": "string",
          "title": "Last Name",
          "description": "The last name of the user",
          "order": 3
        },
        "orgs": {
          "type": "array",
          "title": "Organizations",
          "description": "The organizations for which the user has access",
          "items": {
            "type": "object"
          },
          "order": 6
        },
        "rbac_roles": {
          "type": "array",
          "title": "Roles",
          "description": "The roles assigned to the user",
          "items": {
            "type": "object"
          },
          "order": 9
        },
        "saml_enabled": {
          "type": "boolean",
          "title": "SAML Enabled",
          "description": "Whether SAML has been enabled for the user",
          "order": 8
        },
        "tags": {
          "type": "array",
          "title": "Tags",
          "description": "The user defined tags",
          "items": {
            "type": "string"
          },
          "order": 7
        }
      },
      "required": [
        "id"
      ]
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
