# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Retrieve list of vulnerability sync tasks"


class Input:
    BATCH_ID = "batch_id"
    ORG_ID = "org_id"
    STATUS = "status"
    

class Output:
    TASKS = "tasks"
    

class ListVulnerabilitySyncTasksInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "batch_id": {
      "type": "integer",
      "title": "Batch ID",
      "description": "Filter by batch identifier",
      "order": 3
    },
    "org_id": {
      "type": "integer",
      "title": "Organization ID",
      "description": "Identifier of organization",
      "order": 1
    },
    "status": {
      "type": "string",
      "title": "Status",
      "description": "Filter by status of tasks",
      "order": 2
    }
  },
  "required": [
    "org_id"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class ListVulnerabilitySyncTasksOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "tasks": {
      "type": "array",
      "title": "Vulnerability Sync Tasks",
      "description": "List of vulnerability sync tasks",
      "items": {
        "$ref": "#/definitions/task"
      },
      "order": 1
    }
  },
  "definitions": {
    "task": {
      "type": "object",
      "title": "task",
      "properties": {
        "completed_at": {
          "type": "string",
          "title": "Completed At",
          "description": "Datetime the task was completed",
          "order": 12
        },
        "created_at": {
          "type": "string",
          "title": "Created At",
          "description": "Datetime the task was created",
          "order": 10
        },
        "created_by_user": {
          "type": "object",
          "title": "Created By User",
          "description": "Task creation details",
          "order": 8
        },
        "cves": {
          "type": "array",
          "title": "CVEs",
          "description": "List of CVEs associated with task",
          "items": {
            "type": "string"
          },
          "order": 13
        },
        "id": {
          "type": "integer",
          "title": "Task ID",
          "description": "Identifier of task",
          "order": 1
        },
        "last_updated_by_user": {
          "type": "object",
          "title": "Updated By User",
          "description": "Task update details",
          "order": 9
        },
        "notes": {
          "type": "string",
          "title": "Task Notes",
          "description": "Notes associated with task",
          "order": 6
        },
        "organization_id": {
          "type": "integer",
          "title": "Organization ID",
          "description": "Identifier of organization",
          "order": 2
        },
        "payload": {
          "type": "object",
          "title": "Payload",
          "description": "Payload associated with task",
          "order": 4
        },
        "source": {
          "type": "string",
          "title": "Task Source",
          "description": "Source of task",
          "order": 5
        },
        "status": {
          "type": "string",
          "title": "Task Status",
          "description": "Status of task",
          "order": 7
        },
        "task_type": {
          "type": "string",
          "title": "Task Type",
          "description": "Type of task",
          "order": 3
        },
        "updated_at": {
          "type": "string",
          "title": "Updated At",
          "description": "Datetime the task was updated",
          "order": 11
        }
      },
      "required": [
        "id"
      ]
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
